// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/rates/last": {
            "get": {
                "description": "Получить последние курсы криптовалют по указанным названиям.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rates"
                ],
                "summary": "Get Last Rates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Список названий криптовалют через запятую (например, BTC,ETH)",
                        "name": "titles",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список последних курсов криптовалют",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/port.coinDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - отсутствует параметр titles",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - данные не найдены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - ошибка на сервере",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/rates/{typeinfo}": {
            "get": {
                "description": "Получить агрегированные данные курсов криптовалют (максимум, минимум, среднее, процентное изменение).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rates"
                ],
                "summary": "Get Average Rates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Тип агрегации (max, min, avg, percent)",
                        "name": "typeinfo",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Список названий криптовалют через запятую (например, BTC,ETH)",
                        "name": "titles",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список агрегированных данных курсов криптовалют",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/port.coinDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - отсутствует параметр titles или typeinfo",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - данные не найдены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - ошибка на сервере",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "port.coinDTO": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "rate_percent_delta": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.16",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Pre project API",
	Description:      "API server for information crypto coins",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
